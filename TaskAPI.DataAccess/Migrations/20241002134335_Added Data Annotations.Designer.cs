// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TaskAPI.DataAccess;

#nullable disable

namespace TaskAPI.DataAccess.Migrations
{
    [DbContext(typeof(TodoDbContext))]
    [Migration("20241002134335_Added Data Annotations")]
    partial class AddedDataAnnotations
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("TaskAPI.Models.Author", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("AddressNo")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.ToTable("Authors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AddressNo = "45",
                            City = "colombo 1",
                            FullName = "Saman Perera",
                            Street = "Street 1 "
                        },
                        new
                        {
                            Id = 2,
                            AddressNo = "15",
                            City = "colombo 2",
                            FullName = "Joshuwa Desilva",
                            Street = "Street 2 "
                        },
                        new
                        {
                            Id = 3,
                            AddressNo = "30",
                            City = "colombo 3",
                            FullName = "Sasmitha Hiram",
                            Street = "Street 1 "
                        },
                        new
                        {
                            Id = 4,
                            AddressNo = "27",
                            City = "colombo 4",
                            FullName = "John Doe ",
                            Street = "Street 4 "
                        });
                });

            modelBuilder.Entity("TaskAPI.Models.Todo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AuthorId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Due")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.ToTable("Todos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AuthorId = 1,
                            Created = new DateTime(2024, 10, 2, 19, 13, 34, 907, DateTimeKind.Local).AddTicks(8178),
                            Description = "text books for the school",
                            Due = new DateTime(2024, 10, 7, 19, 13, 34, 907, DateTimeKind.Local).AddTicks(8188),
                            Status = 0,
                            Title = "Get boooks for school-DB"
                        },
                        new
                        {
                            Id = 2,
                            AuthorId = 1,
                            Created = new DateTime(2024, 10, 2, 19, 13, 34, 907, DateTimeKind.Local).AddTicks(8192),
                            Description = "Book Tickets and  accomedation  for vacation",
                            Due = new DateTime(2024, 10, 4, 19, 13, 34, 907, DateTimeKind.Local).AddTicks(8193),
                            Status = 0,
                            Title = "Plan Vacation"
                        },
                        new
                        {
                            Id = 3,
                            AuthorId = 2,
                            Created = new DateTime(2024, 10, 2, 19, 13, 34, 907, DateTimeKind.Local).AddTicks(8194),
                            Description = "Upgrade System Software to the latest version",
                            Due = new DateTime(2024, 10, 6, 19, 13, 34, 907, DateTimeKind.Local).AddTicks(8194),
                            Status = 0,
                            Title = "Update Software"
                        });
                });

            modelBuilder.Entity("TaskAPI.Models.Todo", b =>
                {
                    b.HasOne("TaskAPI.Models.Author", "Author")
                        .WithMany("Todos")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");
                });

            modelBuilder.Entity("TaskAPI.Models.Author", b =>
                {
                    b.Navigation("Todos");
                });
#pragma warning restore 612, 618
        }
    }
}
